{
  "id": "chatcmpl-BqmfyFn7LmKoUndVo0Cbjw3xZFCg2",
  "object": "chat.completion",
  "created": 1751919866,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "```java\npackage com.skillmap.backend.model;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.Column;\nimport jakarta.validation.constraints.Max;\nimport jakarta.validation.constraints.Min;\nimport jakarta.validation.constraints.NotNull;\n\n@Entity\npublic class Contenido {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @NotNull\n    @Min(1)\n    @Max(5)\n    private Integer nivel;\n\n    @NotNull\n    @Column(length = 500)\n    private String url_curso;\n\n    @NotNull\n    @Column(length = 500)\n    private String url_test;\n\n    @NotNull\n    private Long skill_id;\n\n    // getters and setters\n}\n```\n\n```java\npackage com.skillmap.backend.repository;\n\nimport com.skillmap.backend.model.Contenido;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ContenidoRepository extends JpaRepository<Contenido, Long> {\n}\n```\n\n```java\npackage com.skillmap.backend.service;\n\nimport com.skillmap.backend.model.Contenido;\nimport com.skillmap.backend.repository.ContenidoRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ContenidoService {\n\n    @Autowired\n    private ContenidoRepository contenidoRepository;\n\n    public Contenido save(Contenido contenido) {\n        return contenidoRepository.save(contenido);\n    }\n\n    public Contenido get(Long id) {\n        return contenidoRepository.findById(id).orElse(null);\n    }\n\n    public Contenido update(Contenido contenido) {\n        return contenidoRepository.save(contenido);\n    }\n\n    public void delete(Long id) {\n        contenidoRepository.deleteById(id);\n    }\n}\n```\n\n```java\npackage com.skillmap.backend.controller;\n\nimport com.skillmap.backend.model.Contenido;\nimport com.skillmap.backend.service.ContenidoService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/contenido\")\npublic class ContenidoController {\n\n    @Autowired\n    private ContenidoService contenidoService;\n\n    @PostMapping\n    public Contenido create(@RequestBody Contenido contenido) {\n        return contenidoService.save(contenido);\n    }\n\n    @GetMapping(\"/{id}\")\n    public Contenido get(@PathVariable Long id) {\n        return contenidoService.get(id);\n    }\n\n    @PutMapping\n    public Contenido update(@RequestBody Contenido contenido) {\n        return contenidoService.update(contenido);\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public void delete(@PathVariable Long id) {\n        contenidoService.delete(id);\n    }\n}\n```\n\n```java\npackage com.skillmap.backend.controller;\n\nimport com.skillmap.backend.model.Contenido;\nimport com.skillmap.backend.service.ContenidoService;\nimport com.skillmap.backend.service.SkillService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/skill\")\npublic class SkillController {\n\n    @Autowired\n    private SkillService skillService;\n\n    @Autowired\n    private ContenidoService contenidoService;\n\n    // existing methods\n\n    @PostMapping(\"/{id}/contenido\")\n    public Contenido createContenido(@PathVariable Long id, @RequestBody Contenido contenido) {\n        contenido.setSkill_id(id);\n        return contenidoService.save(contenido);\n    }\n\n    @GetMapping(\"/{id}/contenido/{contenidoId}\")\n    public Contenido getContenido(@PathVariable Long id, @PathVariable Long contenidoId) {\n        Contenido contenido = contenidoService.get(contenidoId);\n        if (contenido != null && contenido.getSkill_id().equals(id)) {\n            return contenido;\n        }\n        return null;\n    }\n\n    @PutMapping(\"/{id}/contenido\")\n    public Contenido updateContenido(@PathVariable Long id, @RequestBody Contenido contenido) {\n        if (contenido.getSkill_id().equals(id)) {\n            return contenidoService.update(contenido);\n        }\n        return null;\n    }\n\n    @DeleteMapping(\"/{id}/contenido/{contenidoId}\")\n    public void deleteContenido(@PathVariable Long id, @PathVariable Long contenidoId) {\n        Contenido contenido = contenidoService.get(contenidoId);\n        if (contenido != null && contenido.getSkill_id().equals(id)) {\n            contenidoService.delete(contenidoId);\n        }\n    }\n}\n```\n\n```java\npackage com.skillmap.backend.service;\n\nimport com.skillmap.backend.model.Contenido;\nimport com.skillmap.backend.repository.ContenidoRepository;\nimport com.skillmap.backend.repository.SkillRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class SkillService {\n\n    @Autowired\n    private SkillRepository skillRepository;\n\n    @Autowired\n    private ContenidoRepository contenidoRepository;\n\n    // existing methods\n\n    public Contenido saveContenido(Contenido contenido) {\n        return contenidoRepository.save(contenido);\n    }\n\n    public Contenido getContenido(Long id) {\n        return contenidoRepository.findById(id).orElse(null);\n    }\n\n    public Contenido updateContenido(Contenido contenido) {\n        return contenidoRepository.save(contenido);\n    }\n\n    public void deleteContenido(Long id) {\n        contenidoRepository.deleteById(id);\n    }\n}\n```",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 1398,
    "completion_tokens": 1043,
    "total_tokens": 2441,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
